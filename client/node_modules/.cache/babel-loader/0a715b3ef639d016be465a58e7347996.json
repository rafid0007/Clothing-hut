{"ast":null,"code":"import shopActionTypes from\"./shop.types\";import{firestore,convertCollectionsSnapShotToMap}from\"../../firebase/firebase.utils\";export var fetchCollectionsStart=function fetchCollectionsStart(){return{type:shopActionTypes.FETCH_COLLECTION_START};};export var fetchCollectionsSuccess=function fetchCollectionsSuccess(collections){return{type:shopActionTypes.FETCH_COLLECTION_SUCCESS,payload:collections};};export var fetchCollectionsFailure=function fetchCollectionsFailure(errorMessage){return{type:shopActionTypes.FETCH_COLLECTION_FAILURE,payload:errorMessage};};export var fetchCollectionsStartAsync=function fetchCollectionsStartAsync(){return function(dispatch){var collectionRef=firestore.collection('collections');dispatch(fetchCollectionsStart());collectionRef.get().then(function(response){var collectionsMap=convertCollectionsSnapShotToMap(response);dispatch(fetchCollectionsSuccess(collectionsMap));}).catch(function(e){return dispatch(fetchCollectionsFailure(e.message));});};};","map":{"version":3,"sources":["E:/react-commerce/client/src/redux/shop/shop.actions.js"],"names":["shopActionTypes","firestore","convertCollectionsSnapShotToMap","fetchCollectionsStart","type","FETCH_COLLECTION_START","fetchCollectionsSuccess","collections","FETCH_COLLECTION_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTION_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","response","collectionsMap","catch","e","message"],"mappings":"AAAA,MAAOA,CAAAA,eAAP,KAA4B,cAA5B,CACA,OAAQC,SAAR,CAAmBC,+BAAnB,KAAyD,+BAAzD,CAEA,MAAO,IAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,SAAO,CACxCC,IAAI,CAAEJ,eAAe,CAACK,sBADkB,CAAP,EAA9B,CAIP,MAAO,IAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,WAAW,QAAK,CACnDH,IAAI,CAAEJ,eAAe,CAACQ,wBAD6B,CAEnDC,OAAO,CAAEF,WAF0C,CAAL,EAA3C,CAKP,MAAO,IAAMG,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,YAAY,QAAK,CACpDP,IAAI,CAAEJ,eAAe,CAACY,wBAD8B,CAEpDH,OAAO,CAAEE,YAF2C,CAAL,EAA5C,CAKP,MAAO,IAAME,CAAAA,0BAA0B,CAAG,QAA7BA,CAAAA,0BAA6B,SAAM,UAAAC,QAAQ,CAAI,CACxD,GAAMC,CAAAA,aAAa,CAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAtB,CACAF,QAAQ,CAACX,qBAAqB,EAAtB,CAAR,CACAY,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,SAAAC,QAAQ,CAAI,CACjC,GAAMC,CAAAA,cAAc,CAAGlB,+BAA+B,CAACiB,QAAD,CAAtD,CACAL,QAAQ,CAACR,uBAAuB,CAACc,cAAD,CAAxB,CAAR,CACH,CAHD,EAGGC,KAHH,CAGS,SAAAC,CAAC,QAAIR,CAAAA,QAAQ,CAACJ,uBAAuB,CAACY,CAAC,CAACC,OAAH,CAAxB,CAAZ,EAHV,EAIH,CAPyC,EAAnC","sourcesContent":["import shopActionTypes from \"./shop.types\";\r\nimport {firestore, convertCollectionsSnapShotToMap} from \"../../firebase/firebase.utils\";\r\n\r\nexport const fetchCollectionsStart = () => ({\r\n    type: shopActionTypes.FETCH_COLLECTION_START\r\n});\r\n\r\nexport const fetchCollectionsSuccess = collections => ({\r\n    type: shopActionTypes.FETCH_COLLECTION_SUCCESS,\r\n    payload: collections\r\n});\r\n\r\nexport const fetchCollectionsFailure = errorMessage => ({\r\n    type: shopActionTypes.FETCH_COLLECTION_FAILURE,\r\n    payload: errorMessage\r\n});\r\n\r\nexport const fetchCollectionsStartAsync = () => dispatch => {\r\n    const collectionRef = firestore.collection('collections');\r\n    dispatch(fetchCollectionsStart());\r\n    collectionRef.get().then(response => {\r\n        const collectionsMap = convertCollectionsSnapShotToMap(response);\r\n        dispatch(fetchCollectionsSuccess(collectionsMap));\r\n    }).catch(e => dispatch(fetchCollectionsFailure(e.message)));\r\n};"]},"metadata":{},"sourceType":"module"}