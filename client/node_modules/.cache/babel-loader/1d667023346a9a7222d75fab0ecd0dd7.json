{"ast":null,"code":"import _regeneratorRuntime from\"E:\\\\react-commerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _objectSpread from\"E:\\\\react-commerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"E:\\\\react-commerce\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import firebase from\"firebase/app\";import'firebase/firestore';import'firebase/auth';var config={apiKey:\"AIzaSyDFW2QutpDo_nncZU9WQA5PBUa1BCUwE-8\",authDomain:\"react-commerce-db-b00aa.firebaseapp.com\",databaseURL:\"https://react-commerce-db-b00aa.firebaseio.com\",projectId:\"react-commerce-db-b00aa\",storageBucket:\"react-commerce-db-b00aa.appspot.com\",messagingSenderId:\"635617394575\",appId:\"1:635617394575:web:5cc7a066aa1e61bdb6d5fa\",measurementId:\"G-P3SYQD8WD5\"};export var createUserProfileDocument=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(userAuth,additionalData){var userRef,userSnap,displayName,email,created_at;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(userAuth){_context.next=2;break;}return _context.abrupt(\"return\");case 2:userRef=firestore.doc(\"users/\".concat(userAuth.uid));_context.next=5;return userRef.get();case 5:userSnap=_context.sent;if(userSnap.exists){_context.next=17;break;}displayName=userAuth.displayName,email=userAuth.email;created_at=new Date();_context.prev=9;_context.next=12;return userRef.set(_objectSpread({displayName:displayName,email:email,created_at:created_at},additionalData));case 12:_context.next=17;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](9);console.log('error creating user',_context.t0.message);case 17:return _context.abrupt(\"return\",userRef);case 18:case\"end\":return _context.stop();}}},_callee,null,[[9,14]]);}));return function createUserProfileDocument(_x,_x2){return _ref.apply(this,arguments);};}();export var addCollectionsandDocuments=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(collectionKey,objectsToAdd){var collectionRef,batch;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:collectionRef=firestore.collection(collectionKey);batch=firestore.batch();objectsToAdd.forEach(function(obj){var newDocRef=collectionRef.doc();batch.set(newDocRef,obj);});_context2.next=5;return batch.commit();case 5:return _context2.abrupt(\"return\",_context2.sent);case 6:case\"end\":return _context2.stop();}}},_callee2);}));return function addCollectionsandDocuments(_x3,_x4){return _ref2.apply(this,arguments);};}();export var convertCollectionsSnapShotToMap=function convertCollectionsSnapShotToMap(collectionsSnapshot){var transformedCollectionsArray=collectionsSnapshot.docs.map(function(doc){var _doc$data=doc.data(),title=_doc$data.title,items=_doc$data.items;return{routeName:encodeURI(title.toLowerCase()),id:doc.id,title:title,items:items};});return transformedCollectionsArray.reduce(function(accumulator,collection){accumulator[collection.title.toLowerCase()]=collection;return accumulator;},{});};firebase.initializeApp(config);export var auth=firebase.auth();export var firestore=firebase.firestore();var provider=new firebase.auth.GoogleAuthProvider();provider.setCustomParameters({prompt:'select_account'});export var SignInWithGoogle=function SignInWithGoogle(){return auth.signInWithPopup(provider);};export default firebase;","map":{"version":3,"sources":["E:/react-commerce/client/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","get","userSnap","exists","displayName","email","created_at","Date","set","console","log","message","addCollectionsandDocuments","collectionKey","objectsToAdd","collectionRef","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapShotToMap","collectionsSnapshot","transformedCollectionsArray","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDFW2QutpDo_nncZU9WQA5PBUa1BCUwE-8\",\r\n    authDomain: \"react-commerce-db-b00aa.firebaseapp.com\",\r\n    databaseURL: \"https://react-commerce-db-b00aa.firebaseio.com\",\r\n    projectId: \"react-commerce-db-b00aa\",\r\n    storageBucket: \"react-commerce-db-b00aa.appspot.com\",\r\n    messagingSenderId: \"635617394575\",\r\n    appId: \"1:635617394575:web:5cc7a066aa1e61bdb6d5fa\",\r\n    measurementId: \"G-P3SYQD8WD5\"\r\n  };\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const userSnap = await userRef.get();\r\n    if (!userSnap.exists) {\r\n        const {displayName, email} = userAuth;\r\n        const created_at = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                created_at,\r\n                ...additionalData\r\n            })\r\n        } catch (e) {\r\n            console.log('error creating user', e.message);\r\n        }\r\n    }\r\n    // console.log(userSnap.exists);\r\n    return userRef;\r\n};\r\n\r\nexport const addCollectionsandDocuments = async (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n\r\n    const batch = firestore.batch();\r\n    objectsToAdd.forEach(obj =>{\r\n        const newDocRef = collectionRef.doc();\r\n        batch.set(newDocRef, obj)\r\n});\r\n    return await batch.commit();\r\n};\r\n\r\nexport const convertCollectionsSnapShotToMap = collectionsSnapshot => {\r\n    const transformedCollectionsArray = collectionsSnapshot.docs.map(doc => {\r\n        const {title, items} =doc.data();\r\n\r\n        return {\r\n            routeName: encodeURI(title.toLowerCase()),\r\n            id: doc.id,\r\n            title,\r\n            items\r\n        }\r\n    });\r\n\r\n    return transformedCollectionsArray.reduce((accumulator, collection) => {\r\n        accumulator[collection.title.toLowerCase()] = collection;\r\n        return accumulator;\r\n    }, {})\r\n\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}