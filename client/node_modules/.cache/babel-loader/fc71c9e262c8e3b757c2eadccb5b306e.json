{"ast":null,"code":"import firebase from \"firebase/app\";\nimport 'firebase/firestore';\nimport 'firebase/auth';\nconst config = {\n  apiKey: \"AIzaSyDFW2QutpDo_nncZU9WQA5PBUa1BCUwE-8\",\n  authDomain: \"react-commerce-db-b00aa.firebaseapp.com\",\n  databaseURL: \"https://react-commerce-db-b00aa.firebaseio.com\",\n  projectId: \"react-commerce-db-b00aa\",\n  storageBucket: \"react-commerce-db-b00aa.appspot.com\",\n  messagingSenderId: \"635617394575\",\n  appId: \"1:635617394575:web:5cc7a066aa1e61bdb6d5fa\",\n  measurementId: \"G-P3SYQD8WD5\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userRef = firestore.doc(`users/${userAuth.uid}`);\n  const userSnap = await userRef.get();\n\n  if (!userSnap.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const created_at = new Date();\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        created_at,\n        ...additionalData\n      });\n    } catch (e) {\n      console.log('error creating user', e.message);\n    }\n  } // console.log(userSnap.exists);\n\n\n  return userRef;\n};\nexport const addCollectionsandDocuments = (collectionKey, objectsToAdd) => {\n  const collectionRef = firestore.collection(collectionKey);\n  console.log({\n    collections: collectionRef\n  });\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nconst provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\nexport default firebase;","map":{"version":3,"sources":["E:/react-commerce/src/firebase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userRef","firestore","doc","uid","userSnap","get","exists","displayName","email","created_at","Date","set","e","console","log","message","addCollectionsandDocuments","collectionKey","objectsToAdd","collectionRef","collection","collections","initializeApp","auth","provider","GoogleAuthProvider","setCustomParameters","prompt","SignInWithGoogle","signInWithPopup"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,yCAFD;AAGXC,EAAAA,WAAW,EAAE,gDAHF;AAIXC,EAAAA,SAAS,EAAE,yBAJA;AAKXC,EAAAA,aAAa,EAAE,qCALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;AAWA,OAAO,MAAMC,yBAAyB,GAAG,OAAOC,QAAP,EAAiBC,cAAjB,KAAoC;AACzE,MAAI,CAACD,QAAL,EAAe;AACf,QAAME,OAAO,GAAGC,SAAS,CAACC,GAAV,CAAe,SAAQJ,QAAQ,CAACK,GAAI,EAApC,CAAhB;AACA,QAAMC,QAAQ,GAAG,MAAMJ,OAAO,CAACK,GAAR,EAAvB;;AACA,MAAI,CAACD,QAAQ,CAACE,MAAd,EAAsB;AAClB,UAAM;AAACC,MAAAA,WAAD;AAAcC,MAAAA;AAAd,QAAuBV,QAA7B;AACA,UAAMW,UAAU,GAAG,IAAIC,IAAJ,EAAnB;;AAEA,QAAI;AACA,YAAMV,OAAO,CAACW,GAAR,CAAY;AACdJ,QAAAA,WADc;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,UAHc;AAId,WAAGV;AAJW,OAAZ,CAAN;AAMH,KAPD,CAOE,OAAOa,CAAP,EAAU;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCF,CAAC,CAACG,OAArC;AACH;AACJ,GAlBwE,CAmBzE;;;AACA,SAAOf,OAAP;AACH,CArBM;AAuBP,OAAO,MAAMgB,0BAA0B,GAAG,CAACC,aAAD,EAAgBC,YAAhB,KAAiC;AACvE,QAAMC,aAAa,GAAGlB,SAAS,CAACmB,UAAV,CAAqBH,aAArB,CAAtB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACO,IAAAA,WAAW,EAAEF;AAAd,GAAZ;AACH,CAHM;AAKPhC,QAAQ,CAACmC,aAAT,CAAuBlC,MAAvB;AAEA,OAAO,MAAMmC,IAAI,GAAGpC,QAAQ,CAACoC,IAAT,EAAb;AACP,OAAO,MAAMtB,SAAS,GAAGd,QAAQ,CAACc,SAAT,EAAlB;AAEP,MAAMuB,QAAQ,GAAG,IAAIrC,QAAQ,CAACoC,IAAT,CAAcE,kBAAlB,EAAjB;AACAD,QAAQ,CAACE,mBAAT,CAA6B;AAACC,EAAAA,MAAM,EAAC;AAAR,CAA7B;AACA,OAAO,MAAMC,gBAAgB,GAAG,MAAML,IAAI,CAACM,eAAL,CAAqBL,QAArB,CAA/B;AAEP,eAAerC,QAAf","sourcesContent":["import firebase from \"firebase/app\";\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst config = {\r\n    apiKey: \"AIzaSyDFW2QutpDo_nncZU9WQA5PBUa1BCUwE-8\",\r\n    authDomain: \"react-commerce-db-b00aa.firebaseapp.com\",\r\n    databaseURL: \"https://react-commerce-db-b00aa.firebaseio.com\",\r\n    projectId: \"react-commerce-db-b00aa\",\r\n    storageBucket: \"react-commerce-db-b00aa.appspot.com\",\r\n    messagingSenderId: \"635617394575\",\r\n    appId: \"1:635617394575:web:5cc7a066aa1e61bdb6d5fa\",\r\n    measurementId: \"G-P3SYQD8WD5\"\r\n  };\r\n\r\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\r\n    if (!userAuth) return;\r\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\r\n    const userSnap = await userRef.get();\r\n    if (!userSnap.exists) {\r\n        const {displayName, email} = userAuth;\r\n        const created_at = new Date();\r\n\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                created_at,\r\n                ...additionalData\r\n            })\r\n        } catch (e) {\r\n            console.log('error creating user', e.message);\r\n        }\r\n    }\r\n    // console.log(userSnap.exists);\r\n    return userRef;\r\n};\r\n\r\nexport const addCollectionsandDocuments = (collectionKey, objectsToAdd) => {\r\n    const collectionRef = firestore.collection(collectionKey);\r\n    console.log({collections: collectionRef})\r\n};\r\n\r\nfirebase.initializeApp(config);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const SignInWithGoogle = () => auth.signInWithPopup(provider);\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}